function t(t,e){const a=function(t,e){const a=t%e;return a<0?a+e:a}(e,t.length),s=Math.floor(a),i=(s+1)%t.length,o=a-s;return t[s]*(1-o)+t[i]*o}class e extends AudioWorkletProcessor{static get parameterDescriptors(){return[{name:"trigger",defaultValue:0,automationRate:"a-rate"},{name:"amp",defaultValue:1,automationRate:"a-rate"},{name:"frequency",defaultValue:0,automationRate:"a-rate"}]}setScale(t,e,a){this.scale=t,"linear"===t?(this.offset=e,this.gain=a-e):(this.offset=Math.log(e),this.gain=Math.log(a)-this.offset)}constructor(){super(),this.buffer=new Float32Array(1),this.index=0,this.phase=0,this.loop=!0,this.interp="linear",this.lastIndex=null,this.scale="linear",this.gain=2,this.offset=-1,this.port.onmessage=t=>{if(void 0!==t.data.buffer)this.buffer=t.data.buffer;else if(void 0!==t.data.interp)this.interp=t.data.interp;else if(void 0!==t.data.loop)this.loop=t.data.loop;else if(void 0!==t.data.scale){const{type:e,min:a,max:s}=t.data.scale;this.setScale(e,a,s)}}}process(e,a,s){const i=s.amp,o=s.frequency,l=s.trigger,n=a[0][0],r=a[1][0],h=this.gain,f=this.offset,c=this.loop,u=this.buffer,g="log"===this.scale,d="linear"===this.interp;let p=this.phase,m=this.index,x=this.lastIndex;for(let e=0;e<n.length;e++){let a;if(0!==l[e%l.length]&&(p=0),r[e]=p,d)a=t(u,p*u.length);else{const t=p*u.length;if(Math.floor(t)===Math.floor(x))a=0;else{const e=t-x;a=u[(e>0||e<-u.length/2)&&e<u.length/2?Math.floor(t):Math.floor(x)]}x=t}n[e]=(a+1)/2*h+f,g&&(n[e]=Math.exp(n[e])),n[e]*=i[e%i.length],p+=o[e%o.length]/sampleRate,p>1&&(c?p%=1:p=1)}return this.lastIndex=x,this.index=m,this.phase=p,!0}}registerProcessor("cycle",e);
//# sourceMappingURL=worklet.be1dcd4b.js.map
